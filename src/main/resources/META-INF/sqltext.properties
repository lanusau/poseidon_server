# SQL to get target information
Target.getTargetSQL=\
select t.target_id,t.hostname,t.name,t.port_number,t.database_name, \
t.monitor_username,t.monitor_password, t.salt, t.status_code, t.server_id,tt.url_jdbc \
from psd_target t, psd_target_type tt  \
where t.target_id = ? \
and t.target_type_id = tt.target_type_id

# SQL to get script information
Script.getScriptSQL=\
select \
script_id, \
name, \
description, \
schedule_min, \
schedule_hour, \
schedule_day, \
schedule_month, \
schedule_week, \
query_type, \
replace(query_text,char(13),char(10)) query_text, \
timeout_sec, \
fixed_severity, \
severity_column_position, \
value_med_severity, \
value_high_severity, \
expression_text, \
message_format, \
message_subject, \
message_header, \
message_text_str, \
message_footer, \
status_code, \
create_sysdate, \
update_sysdate \
from psd_script \
where script_id =?  

# SQL to get targets assigned to script
Script.getTargetsSQL=\
select st.target_id \
from psd_script_target st, psd_target t \
where st.script_id = ? \
and st.target_id = t.target_id \
and t.status_code = 'A'\

# SQL to get targets assigned to script through groups
Script.getTargetsThroughGroupsSQL=\
select a.target_id \
from psd_script_group sg, psd_target_group_assignment a, psd_target t \
where sg.script_id = ? \
and sg.target_group_id = a.target_group_id \
and a.target_id = t.target_id \
and t.status_code = 'A' \
and a.status_code = 'A'

# SQL to get a list of notifications assigned to script
Script.getNotificationsSQL=\
select e.severity,e.email_address \
from psd_script_notification n, psd_notify_group g, psd_notify_group_email e \
where n.script_id = ? \
and n.notify_group_id = g.notify_group_id \
and e.notify_group_id = g.notify_group_id

# SQL to get a list of personal notifications assigned to script
Script.getPersonNotificationsSQL=\
select n.email_address \
from psd_script_person_notification n \
where n.script_id = ? 

# SQL to ping database
ControlDataStore.pingSQL=select user()

# SQL to get active scripts for particular server ID
ControlDataStore.activeScriptSQL=select * from psd_script s \
where status_code = 'A' \
and \
( \
  exists ( \
    select ' ' from psd_script_target st, psd_target t \
    where st.script_id = s.script_id \
    and st.target_id = t.target_id \
    and t.server_id = ? \
  ) \
  or \
  exists ( \
    select ' ' from psd_script_group sg, psd_target_group_assignment tg, psd_target t \
    where sg.script_id = s.script_id \
    and sg.target_group_id = tg.target_group_id \
    and tg.target_id = t.target_id \
    and t.server_id = ? \
  ) \
)

# SQL to get inactive scripts for particular server ID 
ControlDataStore.inactiveScriptSQL=select * from psd_script s \
where status_code = 'I' \
or \
( \
  status_code = 'A' \
  and \
  not exists ( \
    select ' ' from psd_script_target st, psd_target t \
    where st.script_id = s.script_id \
    and st.target_id = t.target_id \
    and t.server_id = ? \
  ) \
  and \
  not exists ( \
    select ' ' from psd_script_group sg, psd_target_group_assignment tg, psd_target t \
    where sg.script_id = s.script_id \
    and sg.target_group_id = tg.target_group_id \
    and tg.target_id = t.target_id \
    and t.server_id = ? \
  ) \
) 

# SQL to log script start
ControlDataStore.logScriptStartSQL=\
insert into psd_script_log \
(script_id, start_date, finish_date, status_number, \
error_status_code,trigger_status_code,create_sysdate, update_sysdate)  \
values  \
(?,now(),null,?,0,0,now(),now())

# SQL to log script start on target 
ControlDataStore.logScriptTargetStartSQL=\
insert into psd_script_target_log \
( script_log_id, target_id, start_date, finish_date, status_number, error_message, create_sysdate, update_sysdate) \
values \
(?,?,now(),null,?,null,now(),now())

# SQL to update log to mark execution end
ControlDataStore.updateScriptLogSQL=\
update psd_script_log \
set finish_date = now(), \
status_number = ?, \
error_status_code = ?, \
trigger_status_code = ?, \
update_sysdate = now() \
where script_log_id = ?

# SQL to log script missfire
ControlDataStore.logScriptMissfireSQL=\
insert into psd_script_log \
( script_id, start_date, finish_date, status_number, \
 error_status_code,trigger_status_code,create_sysdate, update_sysdate) \
values \
(?,now(),null,?,0,0,now(),now())

# SQL to update target log to mark exection end
ControlDataStore.updateScriptTargetLogSQL=\
update psd_script_target_log \
set finish_date = now(), \
error_message = ?, \
status_number = ?, \
severity = ?, \
update_sysdate = now() \
where script_target_log_id = ?

# SQL to log result row
ControlDataStore.logScriptRowSQL=\
insert into psd_script_target_row_log \
(script_target_log_id, row_number, \
expression_result, expression_error_message, severity, create_sysdate, update_sysdate) \
 values ( \
?,?,?,?,?,now(),now())

# SQL to log result column
ControlDataStore.logScriptColSQL=\
insert into psd_script_target_col_log \
(script_target_row_log_id, column_number, column_value, create_sysdate, update_sysdate) \
values ( \
?,?,?,now(),now())

# SQL to log heartbeat
ControlDataStore.logHeartbeatSQL=\
update psd_server \
set heartbeat_sysdate = now() \
where server_id = ?