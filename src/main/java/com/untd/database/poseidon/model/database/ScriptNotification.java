package com.untd.database.poseidon.model.database;
// Generated Dec 2, 2015 11:41:41 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ScriptNotification generated by hbm2java
 */
@Entity
@Table(name = "psd_script_notification")
public class ScriptNotification implements java.io.Serializable {

	private static final long serialVersionUID = 5234752473668565082L;
	
	private Integer scriptNotificationId;
	private NotifyGroup notifyGroup;
	private Script script;
	private Date createSysdate;
	private Date updateSysdate;
	

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "script_notification_id", unique = true, nullable = false)
	public Integer getScriptNotificationId() {
		return this.scriptNotificationId;
	}

	public void setScriptNotificationId(Integer scriptNotificationId) {
		this.scriptNotificationId = scriptNotificationId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_sysdate", nullable = false, length = 19)
	public Date getCreateSysdate() {
		return this.createSysdate;
	}

	public void setCreateSysdate(Date createSysdate) {
		this.createSysdate = createSysdate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_sysdate", nullable = false, length = 19)
	public Date getUpdateSysdate() {
		return this.updateSysdate;
	}

	public void setUpdateSysdate(Date updateSysdate) {
		this.updateSysdate = updateSysdate;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "notify_group_id", nullable = false)
	public NotifyGroup getNotifyGroup() {
		return notifyGroup;
	}

	public void setNotifyGroup(NotifyGroup notifyGroup) {
		this.notifyGroup = notifyGroup;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "script_id", nullable = false)
	public Script getScript() {
		return script;
	}

	public void setScript(Script script) {
		this.script = script;
	}

}
